play.i18n.langs = [ "en" ]

play.modules {
  enabled += "org.sagebionetworks.bridge.play.modules.BridgeSpringContextModule"
}

play.http.requestHandler = "org.sagebionetworks.bridge.play.http.BridgeHttpRequestHandler"

play.http.errorHandler = "org.sagebionetworks.bridge.play.http.BridgeErrorHandler"

play.http.filters = "org.sagebionetworks.bridge.play.http.BridgeFilters"

play.filters {

  # Security headers filter configuration
  headers {

    # The X-Frame-Options header. If null, the header is not set.
    frameOptions = "DENY"

    # The X-XSS-Protection header. If null, the header is not set.
    xssProtection = "1; mode=block"

    # The X-Content-Type-Options header. If null, the header is not set.
    contentTypeOptions = "nosniff"

    # The X-Permitted-Cross-Domain-Policies header. If null, the header is not set.
    permittedCrossDomainPolicies = "master-only"

    # The Content-Security-Policy header. If null, the header is not set.
    contentSecurityPolicy = null
  }

  # CORS filter configuration
  cors {

    # The path prefixes to filter. "/" for all the paths.
    pathPrefixes = ["/"]

    # The allowed origins. If null, all origins are allowed.
    allowedOrigins = null

    # The allowed HTTP methods. If null, all methods are allowed
    allowedHttpMethods = ["HEAD", "GET", "OPTIONS", "POST", "PUT", "DELETE"]

    # The allowed HTTP headers. If null, all headers are allowed.
    allowedHttpHeaders = ["Accept", "Content-Type", "User-Agent", "Bridge-Session", "Origin"]

    # The exposed headers
    exposedHeaders = []

    # Whether to support credentials
    supportsCredentials = true

    # The maximum amount of time the CORS meta data should be cached by the client
    preflightMaxAge = 1 hour
  }

  # GZip filter configuration
  gzip {

    # The buffer size to use for gzipped bytes
    bufferSize = 8k

    # The maximum amount of content to buffer for gzipping in order to calculate the content length before falling back
    # to chunked encoding.
    chunkedThreshold = 100k
  }
}

# Play framework app threads (Akka actors) are single-threaded by default. We have a lot of synchronous requests, so we
# need more than just one thread.
play {
    akka {
        akka.loggers = ["akka.event.Logging$DefaultLogger", "akka.event.slf4j.Slf4jLogger"]
        loglevel = WARNING
        actor {
            default-dispatcher = {
                fork-join-executor {
                    # This may need further tuning.
                    parallelism-min = 20
                    parallelism-max = 40
                }
            }
        }
    }
}
